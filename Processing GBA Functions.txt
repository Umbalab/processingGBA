List of main vars and functions

This list will be further explained in future documentation.
To better understand its use, see the library examples.
The vast majority of functions and variables follow the Processing standard.
For now, see their reference to clear up most doubts about great part of the functions: <https://processing.org/reference>

screenZoomScale //Defines the screen scale (uniform) | 1.0 = no zoom, 1.25 = full screen in height, 1.5 = full screen in width, 2.0 = pixel perfect full screen
stretchView(int vw, int vh) //Function to strech view size

width //var with width screen value
displayWidth //same as width, but with a different name

height //var with height screen value
displayHeight //same as height, but with a different name

frameCount //Frame counter 0 to 2000.

keyCurrent //var that capture the curent key pressed
keyPrevious//var that capture the last key pressed

keyPressed(keyName) //function to capture if some button is pressed
keyHeld(keyName) //function to capture if some button is held
keyReleased(keyName) //function to capture if some button is released

KEY_A //A button var
KEY_B //B var
KEY_SL //Select button var
KEY_ST //Start button var
KEY_R //Right button var
KEY_L //Left button var
KEY_U //Up button var
KEY_D //Down button var
KEY_RS //Right sholder button var
KEY_LS //Left sholder button var

colorMode(u8 mode) // mode = RGBMODE or HUEMODE

stroke(u16 r, u16 g, u16 b) //Function to set stroke color
noStroke() //Function to disable stroke
strokeWeight(int weight) //Function to set the stroke width

fill(u16 r, u16 g, u16 b) //Function to set the fill color
noFill() //Function to disable fill color

background(int r, int g, int b) //Function to paint the background with some color | rgb values 0-31

PI //Pi value = 3.14159265
HALF_PI //Value of half Pi = 1.5707964
QUARTER_PI //Value of Pi quarter = 0.7853982
TWO_PI //Value of Pi twice = 6.2831855
TAU //Value of Pi twice = 6.2831855

sinTable[angle]; //Sine function using Taylor series tabled
cosTable[angle]; //Cosine function using Taylor series tabled

factorial(int n) //Function to calculate factorial
power(float base, int exp) //Function to calculate power
constrain(float value, float min, float max) //Function to restrict a value to a range
norm(float value, float start, float stop) //Function to normalize a number from one range to another
map(float value, float start1, float stop1, float start2, float stop2) //Mapping function
myabs(float n) //Absolute value function
mySqrt(float x) //Square value function
dist(float x1, float y1, float x2, float y2) //Dist function
min(int a, int b) //Function to calculate minimum value
max(int a, int b) //Function to calculate maximum value
myRound(float number) //Function to convert float to int

seed //Initial seed | Global variable for the random number generator
setSeed(unsigned long newSeed) //Function to set the generator seed
randombtw(int value0, int value1) //Function to generate a random integer number in a range [value0, value1]
randomfloat(float min, float max) //Function to generate a random float number in a range [value0, value1]

pushMatrix() //Function to save the current matrix on the stack
popMatrix() //Function to restore the previous array from the stack
translate(int x, int y) //Function to set the current position of an object

rotate(int angle) //Function to rotate 2D objects

PImage //PImage structure | stores x position, y position, rotate 0-360, frames to animate
image(int w,int h, int xo,int yo, const u16* map, int to) //Draw imported image on the screen | image width, image height, position offset, texture name, texture offset

point(int x, int y) //Function to draw a pixel on the screen
line(int x0, int y0, int x1, int y1) //Function to draw lines
beginShape() //Function that starts the definition of a new form
vertex(int x, int y) //Function to add a vertex to the shape
endShape() //Function to close the drawing of a shape
rect(int x, int y, int w, int h) //Function to draw rectangles
square(int x, int y, int w) //Function to draw squares
quad(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4) //Function to draw quadrilaterals with angles other than 90, 90, 90, 90 degrees
triangle(int x1, int y1, int x2, int y2, int x3, int y3) //Function to draw triangles
polygon(float x, float y, float radius, int npoints) //Function to draw polygons
ellipse(int x0, int y0, int rx, int ry) //Function to draw ellipses
circle(int x0, int y0, int rx) //Function to draw circles
arc(int x, int y, int w, int h, float start, float stop) //Function to draw arcs
bezier(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4) //Function to draw a BÃ©zier curve with fill

rotateX(int angleX) //Rotate 3D object in X
rotateY(int angleY) //Rotate 3D object in Y
rotateZ(int angleZ) //Rotate 3D object in Z
box(int x, int y, int z, int w, int h, int d) //Function to draw boxes (cubes or parallelepipeds)

intToString(const char* textw, int value) //Function to convert int to string and concatenate
floatToString(const char* textw, float value) //Function to convert float to string and concatenate
unsignedCharToString(const char* textw, unsigned char value) //Function to convert unsigned char to string and concatenate
strcmp(const char* s1, const char* s2) //Function to compare strings

textFont(const char* fontName) //Function to change font
textAlign(Alignment mode) //Function to set text alignment | LEFT, or CENTER, or RIGHT, or NORMAL
text(const char* str, int x, int y) //text function

PlayNote(u16 frequency, unsigned char length) //Play sound function

mouseX //mouse position in x
mouseY //mouse position in y